plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "org.jetbrains.kotlin.kapt" version "1.2.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.2.61"
}

apply plugin:"application"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0'
    }
}

dependencies {
    //Logging
    compile 'io.github.microutils:kotlin-logging:1.6.24'
    
//    // Kotlin
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.31"
//    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.31"
//
//    // Needed for Java 10
//    compile 'javax.annotation:javax.annotation-api:1.3.2'
//
//    // Micronaut
//    compile "io.micronaut:micronaut-http-client"
//    compile "io.micronaut:micronaut-http-server-netty"
//    compile "io.micronaut:micronaut-runtime"
//    compile "io.micronaut:micronaut-spring"
//    compile 'io.micronaut.configuration:micronaut-kafka'
//
//    kapt "io.micronaut:micronaut-inject-java"
//    kaptTest "io.micronaut:micronaut-inject-java"
//
//    runtime "ch.qos.logback:logback-classic:1.2.3"
//
//    compile 'io.micronaut.configuration:micronaut-micrometer-core:1.1.0'
//    compile 'io.micronaut.configuration:micronaut-micrometer-registry-prometheus:1.1.0'
//
//    testCompile "io.micronaut.test:micronaut-test-junit5"
//    testCompile('org.junit.jupiter:junit-jupiter-api:5.4.2')
//
//    testCompile 'org.apache.kafka:kafka-clients:2.1.1:test'
//    testCompile 'org.apache.kafka:kafka_2.12:2.1.1'
//    testCompile 'org.apache.kafka:kafka_2.12:2.1.1:test'
//
//    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.4.2')

    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut.configuration:micronaut-jdbc-hikari"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile 'io.micronaut.configuration:micronaut-kafka'
    compile "io.micronaut:micronaut-runtime"
    compile "javax.annotation:javax.annotation-api"
    compile "com.zaxxer:HikariCP:3.1.0"
    compile "com.vladsch.kotlin-jdbc:kotlin-jdbc:0.4.4"
    compile 'io.micronaut.configuration:micronaut-micrometer-core:1.1.0'
    compile 'io.micronaut.configuration:micronaut-micrometer-registry-prometheus:1.1.0'
    
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.h2database:h2"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"

    testCompile "org.junit.jupiter:junit-jupiter-api:5.4.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.2"
}

mainClassName = "micronaut.receiver.Application"

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "notes.Application"

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}
