buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.31"
    }
}

version "0.1"
group "notes"

apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0'
    }
}

dependencies {
    //Logging
    compile 'io.github.microutils:kotlin-logging:1.6.24'
    
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.31"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.31"

    // Needed for Java 10
    compile 'javax.annotation:javax.annotation-api:1.3.2'

    // Micronaut
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-spring"
    compile 'io.micronaut.configuration:micronaut-kafka'

    kapt "io.micronaut:micronaut-inject-java"
    kaptTest "io.micronaut:micronaut-inject-java"

    runtime "ch.qos.logback:logback-classic:1.2.3"

    compile 'io.micronaut.configuration:micronaut-micrometer-core:1.1.0'
    compile 'io.micronaut.configuration:micronaut-micrometer-registry-prometheus:1.1.0'

    testCompile "io.micronaut.test:micronaut-test-junit5"
    testCompile('org.junit.jupiter:junit-jupiter-api:5.4.2')

    testCompile 'org.apache.kafka:kafka-clients:2.1.1:test'
    testCompile 'org.apache.kafka:kafka_2.12:2.1.1'
    testCompile 'org.apache.kafka:kafka_2.12:2.1.1:test'

    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

mainClassName = "micronaut.receiver.Application"

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "notes.Application"

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}
